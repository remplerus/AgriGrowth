buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'

version = '0.2'
group = 'com.rempler.agrigrowth'
archivesBaseName = 'agrigrowth'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.3'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'agrigrowth'
            mods {
                agrigrowth {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'agrigrowth'
            mods {
                agrigrowth {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'agrigrowth'
            mods {
                agrigrowth {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'agrigrowth', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                agrigrowth {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven{
        url = 'https://cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url 'https://maven.blakesmods.com'
        content {
            includeGroup "com.blakebr0.cucumber"
            includeGroup "com.blakebr0.mysticalagriculture"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.3-44.1.0'

    //implementation fg.deobf('curse.maven:agricraft-225635:3883933')
    //runtimeOnly fg.deobf('curse.maven:infinitylib-251396:3883932')

    runtimeOnly fg.deobf('com.blakebr0.cucumber:Cucumber:1.19.3-6.1.0')
    implementation fg.deobf('com.blakebr0.mysticalagriculture:MysticalAgriculture:1.19.3-6.1.0')
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "agrigrowth",
                "Specification-Vendor"    : "rempler",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "rempler",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
